{
  "instructions": [
    {
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 2500bab03f0bf0588caeeff9bab8ec80a5f6b8fe
      "instructionType": "Function",
      "identifier": "test",
      "arguments": [
        {
          "identifier": "var1",
          "type": "identifier"
        }
      ],
      "functionBody": [
        {
          "instructionType": "Assignment",
          "identifier": "var1",
          "value": {
            "operands": [
              {
                "identifier": "var1",
                "type": "identifier"
              },
              {
                "value": 10,
                "type": "number"
              }
            ],
            "operator": "+",
            "type": "arithmetic"
          }
        },
        {
          "instructionType": "Return",
          "value": {
            "identifier": "var1",
            "type": "identifier"
          }
<<<<<<< HEAD
=======
      "instructionType": "ForStatement",
      "identifier": null,
      "iterable": null,
      "iteration": {
        "instructionType": "Assignment",
        "identifier": "i",
        "value": {
          "operands": [
            {
              "identifier": "i",
              "type": "identifier"
            },
            {
              "value": 1,
              "type": "number"
            }
          ],
          "operator": "+",
          "type": "arithmetic"
        }
      },
      "body": [
        {
          "instructionType": "VarDeclaration",
          "identifier": "j",
          "type": null,
          "value": {
            "operands": [
              {
                "identifier": "i",
                "type": "identifier"
              },
              {
                "value": 1,
                "type": "number"
              }
            ],
            "operator": "+",
            "type": "arithmetic"
          },
          "isConst": false
>>>>>>> 65ed6472092c85e4ae4aad35be171dc6ebd5d6ea
=======
>>>>>>> 2500bab03f0bf0588caeeff9bab8ec80a5f6b8fe
        }
      ],
      "scope": {
        "variables": {
<<<<<<< HEAD
<<<<<<< HEAD
          "var1": {
            "identifier": "var1",
=======
          "i": {
            "value": 0,
            "type": "number"
          },
          "j": {
            "operands": [
              {
                "identifier": "i",
                "type": "identifier"
              },
              {
                "value": 1,
                "type": "number"
              }
            ],
            "operator": "+",
            "type": "arithmetic"
=======
          "var1": {
            "identifier": "var1",
            "type": "identifier"
>>>>>>> 2500bab03f0bf0588caeeff9bab8ec80a5f6b8fe
          }
        },
        "constants": {},
        "functions": {},
        "isProgramScope": false
      }
    },
    {
      "instructionType": "VarDeclaration",
      "identifier": "test",
      "type": null,
      "value": {
        "instructionType": "FunctionCall",
        "type": "FunctionCall",
        "identifier": "test",
        "arguments": [
          {
            "value": 5,
            "type": "number"
          }
        ]
      },
      "isConst": false
    },
    {
      "value": {
        "expressions": [
          {
            "value": "Test is: ",
            "type": "string"
          },
<<<<<<< HEAD
          "isConst": false
        }
      ],
      "scope": {
        "variables": {
          "k": {
            "operands": [
              {
                "identifier": "n",
                "type": "identifier"
              },
              {
                "value": 3,
                "type": "number"
              }
            ],
            "operator": "*",
            "type": "arithmetic"
          },
          "list": {
            "list": [
              {
                "value": 1,
                "type": "number"
              },
              {
                "value": 2,
                "type": "number"
              },
              {
                "value": 3,
                "type": "number"
              },
              {
                "value": 4,
                "type": "number"
              },
              {
                "value": 5,
                "type": "number"
              },
              {
                "value": 6,
                "type": "number"
              },
              {
                "value": 7,
                "type": "number"
              },
              {
                "value": 8,
                "type": "number"
              },
              {
                "value": 9,
                "type": "number"
              }
            ],
            "type": "list"
          },
          "n": {
            "identifier": "list",
>>>>>>> 65ed6472092c85e4ae4aad35be171dc6ebd5d6ea
=======
          {
            "identifier": "test",
>>>>>>> 2500bab03f0bf0588caeeff9bab8ec80a5f6b8fe
            "type": "identifier"
          }
        ],
        "type": "stringConcat"
      }
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 2500bab03f0bf0588caeeff9bab8ec80a5f6b8fe
    }
  ],
  "scope": {
    "variables": {},
    "constants": {},
    "functions": {
      "test": {
        "instructionType": "Function",
        "identifier": "test",
        "arguments": [
          {
            "identifier": "var1",
            "type": "identifier"
          }
        ],
        "functionBody": [
          {
            "instructionType": "Assignment",
            "identifier": "var1",
            "value": {
              "operands": [
                {
                  "identifier": "var1",
                  "type": "identifier"
                },
                {
                  "value": 10,
                  "type": "number"
                }
              ],
              "operator": "+",
              "type": "arithmetic"
            }
          },
          {
            "instructionType": "Return",
            "value": {
              "identifier": "var1",
              "type": "identifier"
            }
          }
        ],
        "scope": {
          "variables": {
            "var1": {
              "identifier": "var1",
              "type": "identifier"
            }
          },
          "constants": {},
          "functions": {},
          "isProgramScope": false
        }
<<<<<<< HEAD
=======
    },
    {
      "instructionType": "VarDeclaration",
      "identifier": "i",
      "type": null,
      "value": {
        "value": 0,
        "type": "number"
      },
      "isConst": false
    },
    {
      "instructionType": "WhileStatement",
      "condition": {
        "operands": [
          {
            "identifier": "i",
            "type": "identifier"
          },
          {
            "value": 2,
            "type": "number"
          }
        ],
        "operator": "lt",
        "type": "comparison"
      },
      "body": [
        {
          "instructionType": "Assignment",
          "identifier": "i",
          "value": {
            "operands": [
              {
                "identifier": "i",
                "type": "identifier"
              },
              {
                "value": 1,
                "type": "number"
              }
            ],
            "operator": "+",
            "type": "arithmetic"
          }
        }
      ],
      "scope": {
        "variables": {
          "i": {
            "value": 0,
            "type": "number"
          },
          "list": {
            "list": [
              {
                "value": 1,
                "type": "number"
              },
              {
                "value": 2,
                "type": "number"
              },
              {
                "value": 3,
                "type": "number"
              },
              {
                "value": 4,
                "type": "number"
              },
              {
                "value": 5,
                "type": "number"
              },
              {
                "value": 6,
                "type": "number"
              },
              {
                "value": 7,
                "type": "number"
              },
              {
                "value": 8,
                "type": "number"
              },
              {
                "value": 9,
                "type": "number"
              }
            ],
            "type": "list"
          }
        },
        "functions": {}
      }
    },
    {
      "instructionType": "WhileStatement",
      "condition": {
        "value": true,
        "type": "boolean"
      },
      "body": [
        {
          "instructionType": "Assignment",
          "identifier": "i",
          "value": {
            "operands": [
              {
                "identifier": "i",
                "type": "identifier"
              },
              {
                "value": 1,
                "type": "number"
              }
            ],
            "operator": "-",
            "type": "arithmetic"
          }
        }
      ],
      "scope": {
        "variables": {
          "i": {
            "value": 0,
            "type": "number"
          },
          "list": {
            "list": [
              {
                "value": 1,
                "type": "number"
              },
              {
                "value": 2,
                "type": "number"
              },
              {
                "value": 3,
                "type": "number"
              },
              {
                "value": 4,
                "type": "number"
              },
              {
                "value": 5,
                "type": "number"
              },
              {
                "value": 6,
                "type": "number"
              },
              {
                "value": 7,
                "type": "number"
              },
              {
                "value": 8,
                "type": "number"
              },
              {
                "value": 9,
                "type": "number"
              }
            ],
            "type": "list"
          }
        },
        "functions": {}
      }
    }
  ],
  "scope": {
    "variables": {
      "i": {
        "value": 0,
        "type": "number"
      },
      "list": {
        "list": [
          {
            "value": 1,
            "type": "number"
          },
          {
            "value": 2,
            "type": "number"
          },
          {
            "value": 3,
            "type": "number"
          },
          {
            "value": 4,
            "type": "number"
          },
          {
            "value": 5,
            "type": "number"
          },
          {
            "value": 6,
            "type": "number"
          },
          {
            "value": 7,
            "type": "number"
          },
          {
            "value": 8,
            "type": "number"
          },
          {
            "value": 9,
            "type": "number"
          }
        ],
        "type": "list"
>>>>>>> 65ed6472092c85e4ae4aad35be171dc6ebd5d6ea
      }
    }
=======
      }
    },
    "isProgramScope": true
>>>>>>> 2500bab03f0bf0588caeeff9bab8ec80a5f6b8fe
  }
}