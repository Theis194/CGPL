// Generated from com\cgpl\CGPL.g4 by ANTLR 4.7.1
package com.cgpl;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class CGPLLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, AND=37, OR=38, NOT=39, 
		RETURN=40, PRINT=41, FUNCTION=42, LCURLY=43, RCURLY=44, LPAREN=45, RPAREN=46, 
		IF=47, ELSE=48, VAR=49, KONST=50, FOR=51, WHILE=52, IN=53, NUMBER=54, 
		STRING=55, BOOLEAN=56, BREAK=57, DECK=58, PLAYER=59, IDENTIFIER=60, EQUAL=61, 
		LT=62, GT=63, LT_OR_EQUAL=64, GT_OR_EQUAL=65, OP_INC=66, OP_DEC=67, OP_DIV=68, 
		OP_MULT=69, OP_MOD=70, OP_ADD=71, OP_SUB=72, CRLF=73, WS=74;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "AND", "OR", "NOT", "RETURN", "PRINT", "FUNCTION", 
		"LCURLY", "RCURLY", "LPAREN", "RPAREN", "IF", "ELSE", "VAR", "KONST", 
		"FOR", "WHILE", "IN", "NUMBER", "STRING", "BOOLEAN", "BREAK", "DECK", 
		"PLAYER", "IDENTIFIER", "EQUAL", "LT", "GT", "LT_OR_EQUAL", "GT_OR_EQUAL", 
		"OP_INC", "OP_DEC", "OP_DIV", "OP_MULT", "OP_MOD", "OP_ADD", "OP_SUB", 
		"CRLF", "WS"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'='", "','", "'['", "']'", "'.'", "'add'", "'remove'", "'get'", 
		"'size'", "'shuffle'", "'draw'", "'addCard'", "'removeCard'", "'deckSize'", 
		"'of'", "'value'", "'suit'", "'color'", "'name'", "'Suit'", "'jack'", 
		"'queen'", "'king'", "'ace'", "'drawCard'", "'discardCard'", "'shuffleHand'", 
		"'getHand'", "'getScore'", "'increaseScore'", "'decreaseScore'", "'getHandSize'", 
		"'switch'", "'case'", "'default'", "':'", "'and'", "'or'", "'not'", "'return'", 
		"'print'", "'function'", "'{'", "'}'", "'('", "')'", "'if'", "'else'", 
		"'var'", "'const'", "'for'", "'while'", "'in'", null, null, null, "'break'", 
		"'Deck'", "'Player'", null, "'=='", "'<'", "'>'", "'<='", "'>='", "'++'", 
		"'--'", "'/'", "'*'", "'%'", "'+'", "'-'", "';'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, "AND", "OR", "NOT", "RETURN", "PRINT", "FUNCTION", "LCURLY", "RCURLY", 
		"LPAREN", "RPAREN", "IF", "ELSE", "VAR", "KONST", "FOR", "WHILE", "IN", 
		"NUMBER", "STRING", "BOOLEAN", "BREAK", "DECK", "PLAYER", "IDENTIFIER", 
		"EQUAL", "LT", "GT", "LT_OR_EQUAL", "GT_OR_EQUAL", "OP_INC", "OP_DEC", 
		"OP_DIV", "OP_MULT", "OP_MOD", "OP_ADD", "OP_SUB", "CRLF", "WS"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public CGPLLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "CGPL.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2L\u0225\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\4K\tK\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\7\3"+
		"\7\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\13"+
		"\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3"+
		"\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3"+
		"\16\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\21\3"+
		"\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3"+
		"\23\3\23\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3"+
		"\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3"+
		"\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\33\3"+
		"\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3"+
		"\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3"+
		"\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3"+
		"\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3"+
		" \3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3"+
		"\"\3\"\3\"\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3#\3$\3$\3$\3$\3$\3$\3$\3$\3%\3"+
		"%\3&\3&\3&\3&\3\'\3\'\3\'\3(\3(\3(\3(\3)\3)\3)\3)\3)\3)\3)\3*\3*\3*\3"+
		"*\3*\3*\3+\3+\3+\3+\3+\3+\3+\3+\3+\3,\3,\3-\3-\3.\3.\3/\3/\3\60\3\60\3"+
		"\60\3\61\3\61\3\61\3\61\3\61\3\62\3\62\3\62\3\62\3\63\3\63\3\63\3\63\3"+
		"\63\3\63\3\64\3\64\3\64\3\64\3\65\3\65\3\65\3\65\3\65\3\65\3\66\3\66\3"+
		"\66\3\67\3\67\7\67\u01cb\n\67\f\67\16\67\u01ce\13\67\3\67\5\67\u01d1\n"+
		"\67\38\38\78\u01d5\n8\f8\168\u01d8\138\38\38\39\39\39\39\39\39\39\39\3"+
		"9\59\u01e5\n9\3:\3:\3:\3:\3:\3:\3;\3;\3;\3;\3;\3<\3<\3<\3<\3<\3<\3<\3"+
		"=\3=\7=\u01fb\n=\f=\16=\u01fe\13=\3>\3>\3>\3?\3?\3@\3@\3A\3A\3A\3B\3B"+
		"\3B\3C\3C\3C\3D\3D\3D\3E\3E\3F\3F\3G\3G\3H\3H\3I\3I\3J\3J\3K\6K\u0220"+
		"\nK\rK\16K\u0221\3K\3K\2\2L\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25"+
		"\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32"+
		"\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a"+
		"\62c\63e\64g\65i\66k\67m8o9q:s;u<w=y>{?}@\177A\u0081B\u0083C\u0085D\u0087"+
		"E\u0089F\u008bG\u008dH\u008fI\u0091J\u0093K\u0095L\3\2\b\3\2\63;\3\2\62"+
		";\5\2\f\f\17\17$$\5\2C\\aac|\6\2\62;C\\aac|\5\2\13\f\17\17\"\"\2\u022a"+
		"\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2"+
		"\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2"+
		"\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2"+
		"\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2"+
		"\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3"+
		"\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2"+
		"\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2"+
		"U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3"+
		"\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2"+
		"\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2"+
		"{\3\2\2\2\2}\3\2\2\2\2\177\3\2\2\2\2\u0081\3\2\2\2\2\u0083\3\2\2\2\2\u0085"+
		"\3\2\2\2\2\u0087\3\2\2\2\2\u0089\3\2\2\2\2\u008b\3\2\2\2\2\u008d\3\2\2"+
		"\2\2\u008f\3\2\2\2\2\u0091\3\2\2\2\2\u0093\3\2\2\2\2\u0095\3\2\2\2\3\u0097"+
		"\3\2\2\2\5\u0099\3\2\2\2\7\u009b\3\2\2\2\t\u009d\3\2\2\2\13\u009f\3\2"+
		"\2\2\r\u00a1\3\2\2\2\17\u00a5\3\2\2\2\21\u00ac\3\2\2\2\23\u00b0\3\2\2"+
		"\2\25\u00b5\3\2\2\2\27\u00bd\3\2\2\2\31\u00c2\3\2\2\2\33\u00ca\3\2\2\2"+
		"\35\u00d5\3\2\2\2\37\u00de\3\2\2\2!\u00e1\3\2\2\2#\u00e7\3\2\2\2%\u00ec"+
		"\3\2\2\2\'\u00f2\3\2\2\2)\u00f7\3\2\2\2+\u00fc\3\2\2\2-\u0101\3\2\2\2"+
		"/\u0107\3\2\2\2\61\u010c\3\2\2\2\63\u0110\3\2\2\2\65\u0119\3\2\2\2\67"+
		"\u0125\3\2\2\29\u0131\3\2\2\2;\u0139\3\2\2\2=\u0142\3\2\2\2?\u0150\3\2"+
		"\2\2A\u015e\3\2\2\2C\u016a\3\2\2\2E\u0171\3\2\2\2G\u0176\3\2\2\2I\u017e"+
		"\3\2\2\2K\u0180\3\2\2\2M\u0184\3\2\2\2O\u0187\3\2\2\2Q\u018b\3\2\2\2S"+
		"\u0192\3\2\2\2U\u0198\3\2\2\2W\u01a1\3\2\2\2Y\u01a3\3\2\2\2[\u01a5\3\2"+
		"\2\2]\u01a7\3\2\2\2_\u01a9\3\2\2\2a\u01ac\3\2\2\2c\u01b1\3\2\2\2e\u01b5"+
		"\3\2\2\2g\u01bb\3\2\2\2i\u01bf\3\2\2\2k\u01c5\3\2\2\2m\u01d0\3\2\2\2o"+
		"\u01d2\3\2\2\2q\u01e4\3\2\2\2s\u01e6\3\2\2\2u\u01ec\3\2\2\2w\u01f1\3\2"+
		"\2\2y\u01f8\3\2\2\2{\u01ff\3\2\2\2}\u0202\3\2\2\2\177\u0204\3\2\2\2\u0081"+
		"\u0206\3\2\2\2\u0083\u0209\3\2\2\2\u0085\u020c\3\2\2\2\u0087\u020f\3\2"+
		"\2\2\u0089\u0212\3\2\2\2\u008b\u0214\3\2\2\2\u008d\u0216\3\2\2\2\u008f"+
		"\u0218\3\2\2\2\u0091\u021a\3\2\2\2\u0093\u021c\3\2\2\2\u0095\u021f\3\2"+
		"\2\2\u0097\u0098\7?\2\2\u0098\4\3\2\2\2\u0099\u009a\7.\2\2\u009a\6\3\2"+
		"\2\2\u009b\u009c\7]\2\2\u009c\b\3\2\2\2\u009d\u009e\7_\2\2\u009e\n\3\2"+
		"\2\2\u009f\u00a0\7\60\2\2\u00a0\f\3\2\2\2\u00a1\u00a2\7c\2\2\u00a2\u00a3"+
		"\7f\2\2\u00a3\u00a4\7f\2\2\u00a4\16\3\2\2\2\u00a5\u00a6\7t\2\2\u00a6\u00a7"+
		"\7g\2\2\u00a7\u00a8\7o\2\2\u00a8\u00a9\7q\2\2\u00a9\u00aa\7x\2\2\u00aa"+
		"\u00ab\7g\2\2\u00ab\20\3\2\2\2\u00ac\u00ad\7i\2\2\u00ad\u00ae\7g\2\2\u00ae"+
		"\u00af\7v\2\2\u00af\22\3\2\2\2\u00b0\u00b1\7u\2\2\u00b1\u00b2\7k\2\2\u00b2"+
		"\u00b3\7|\2\2\u00b3\u00b4\7g\2\2\u00b4\24\3\2\2\2\u00b5\u00b6\7u\2\2\u00b6"+
		"\u00b7\7j\2\2\u00b7\u00b8\7w\2\2\u00b8\u00b9\7h\2\2\u00b9\u00ba\7h\2\2"+
		"\u00ba\u00bb\7n\2\2\u00bb\u00bc\7g\2\2\u00bc\26\3\2\2\2\u00bd\u00be\7"+
		"f\2\2\u00be\u00bf\7t\2\2\u00bf\u00c0\7c\2\2\u00c0\u00c1\7y\2\2\u00c1\30"+
		"\3\2\2\2\u00c2\u00c3\7c\2\2\u00c3\u00c4\7f\2\2\u00c4\u00c5\7f\2\2\u00c5"+
		"\u00c6\7E\2\2\u00c6\u00c7\7c\2\2\u00c7\u00c8\7t\2\2\u00c8\u00c9\7f\2\2"+
		"\u00c9\32\3\2\2\2\u00ca\u00cb\7t\2\2\u00cb\u00cc\7g\2\2\u00cc\u00cd\7"+
		"o\2\2\u00cd\u00ce\7q\2\2\u00ce\u00cf\7x\2\2\u00cf\u00d0\7g\2\2\u00d0\u00d1"+
		"\7E\2\2\u00d1\u00d2\7c\2\2\u00d2\u00d3\7t\2\2\u00d3\u00d4\7f\2\2\u00d4"+
		"\34\3\2\2\2\u00d5\u00d6\7f\2\2\u00d6\u00d7\7g\2\2\u00d7\u00d8\7e\2\2\u00d8"+
		"\u00d9\7m\2\2\u00d9\u00da\7U\2\2\u00da\u00db\7k\2\2\u00db\u00dc\7|\2\2"+
		"\u00dc\u00dd\7g\2\2\u00dd\36\3\2\2\2\u00de\u00df\7q\2\2\u00df\u00e0\7"+
		"h\2\2\u00e0 \3\2\2\2\u00e1\u00e2\7x\2\2\u00e2\u00e3\7c\2\2\u00e3\u00e4"+
		"\7n\2\2\u00e4\u00e5\7w\2\2\u00e5\u00e6\7g\2\2\u00e6\"\3\2\2\2\u00e7\u00e8"+
		"\7u\2\2\u00e8\u00e9\7w\2\2\u00e9\u00ea\7k\2\2\u00ea\u00eb\7v\2\2\u00eb"+
		"$\3\2\2\2\u00ec\u00ed\7e\2\2\u00ed\u00ee\7q\2\2\u00ee\u00ef\7n\2\2\u00ef"+
		"\u00f0\7q\2\2\u00f0\u00f1\7t\2\2\u00f1&\3\2\2\2\u00f2\u00f3\7p\2\2\u00f3"+
		"\u00f4\7c\2\2\u00f4\u00f5\7o\2\2\u00f5\u00f6\7g\2\2\u00f6(\3\2\2\2\u00f7"+
		"\u00f8\7U\2\2\u00f8\u00f9\7w\2\2\u00f9\u00fa\7k\2\2\u00fa\u00fb\7v\2\2"+
		"\u00fb*\3\2\2\2\u00fc\u00fd\7l\2\2\u00fd\u00fe\7c\2\2\u00fe\u00ff\7e\2"+
		"\2\u00ff\u0100\7m\2\2\u0100,\3\2\2\2\u0101\u0102\7s\2\2\u0102\u0103\7"+
		"w\2\2\u0103\u0104\7g\2\2\u0104\u0105\7g\2\2\u0105\u0106\7p\2\2\u0106."+
		"\3\2\2\2\u0107\u0108\7m\2\2\u0108\u0109\7k\2\2\u0109\u010a\7p\2\2\u010a"+
		"\u010b\7i\2\2\u010b\60\3\2\2\2\u010c\u010d\7c\2\2\u010d\u010e\7e\2\2\u010e"+
		"\u010f\7g\2\2\u010f\62\3\2\2\2\u0110\u0111\7f\2\2\u0111\u0112\7t\2\2\u0112"+
		"\u0113\7c\2\2\u0113\u0114\7y\2\2\u0114\u0115\7E\2\2\u0115\u0116\7c\2\2"+
		"\u0116\u0117\7t\2\2\u0117\u0118\7f\2\2\u0118\64\3\2\2\2\u0119\u011a\7"+
		"f\2\2\u011a\u011b\7k\2\2\u011b\u011c\7u\2\2\u011c\u011d\7e\2\2\u011d\u011e"+
		"\7c\2\2\u011e\u011f\7t\2\2\u011f\u0120\7f\2\2\u0120\u0121\7E\2\2\u0121"+
		"\u0122\7c\2\2\u0122\u0123\7t\2\2\u0123\u0124\7f\2\2\u0124\66\3\2\2\2\u0125"+
		"\u0126\7u\2\2\u0126\u0127\7j\2\2\u0127\u0128\7w\2\2\u0128\u0129\7h\2\2"+
		"\u0129\u012a\7h\2\2\u012a\u012b\7n\2\2\u012b\u012c\7g\2\2\u012c\u012d"+
		"\7J\2\2\u012d\u012e\7c\2\2\u012e\u012f\7p\2\2\u012f\u0130\7f\2\2\u0130"+
		"8\3\2\2\2\u0131\u0132\7i\2\2\u0132\u0133\7g\2\2\u0133\u0134\7v\2\2\u0134"+
		"\u0135\7J\2\2\u0135\u0136\7c\2\2\u0136\u0137\7p\2\2\u0137\u0138\7f\2\2"+
		"\u0138:\3\2\2\2\u0139\u013a\7i\2\2\u013a\u013b\7g\2\2\u013b\u013c\7v\2"+
		"\2\u013c\u013d\7U\2\2\u013d\u013e\7e\2\2\u013e\u013f\7q\2\2\u013f\u0140"+
		"\7t\2\2\u0140\u0141\7g\2\2\u0141<\3\2\2\2\u0142\u0143\7k\2\2\u0143\u0144"+
		"\7p\2\2\u0144\u0145\7e\2\2\u0145\u0146\7t\2\2\u0146\u0147\7g\2\2\u0147"+
		"\u0148\7c\2\2\u0148\u0149\7u\2\2\u0149\u014a\7g\2\2\u014a\u014b\7U\2\2"+
		"\u014b\u014c\7e\2\2\u014c\u014d\7q\2\2\u014d\u014e\7t\2\2\u014e\u014f"+
		"\7g\2\2\u014f>\3\2\2\2\u0150\u0151\7f\2\2\u0151\u0152\7g\2\2\u0152\u0153"+
		"\7e\2\2\u0153\u0154\7t\2\2\u0154\u0155\7g\2\2\u0155\u0156\7c\2\2\u0156"+
		"\u0157\7u\2\2\u0157\u0158\7g\2\2\u0158\u0159\7U\2\2\u0159\u015a\7e\2\2"+
		"\u015a\u015b\7q\2\2\u015b\u015c\7t\2\2\u015c\u015d\7g\2\2\u015d@\3\2\2"+
		"\2\u015e\u015f\7i\2\2\u015f\u0160\7g\2\2\u0160\u0161\7v\2\2\u0161\u0162"+
		"\7J\2\2\u0162\u0163\7c\2\2\u0163\u0164\7p\2\2\u0164\u0165\7f\2\2\u0165"+
		"\u0166\7U\2\2\u0166\u0167\7k\2\2\u0167\u0168\7|\2\2\u0168\u0169\7g\2\2"+
		"\u0169B\3\2\2\2\u016a\u016b\7u\2\2\u016b\u016c\7y\2\2\u016c\u016d\7k\2"+
		"\2\u016d\u016e\7v\2\2\u016e\u016f\7e\2\2\u016f\u0170\7j\2\2\u0170D\3\2"+
		"\2\2\u0171\u0172\7e\2\2\u0172\u0173\7c\2\2\u0173\u0174\7u\2\2\u0174\u0175"+
		"\7g\2\2\u0175F\3\2\2\2\u0176\u0177\7f\2\2\u0177\u0178\7g\2\2\u0178\u0179"+
		"\7h\2\2\u0179\u017a\7c\2\2\u017a\u017b\7w\2\2\u017b\u017c\7n\2\2\u017c"+
		"\u017d\7v\2\2\u017dH\3\2\2\2\u017e\u017f\7<\2\2\u017fJ\3\2\2\2\u0180\u0181"+
		"\7c\2\2\u0181\u0182\7p\2\2\u0182\u0183\7f\2\2\u0183L\3\2\2\2\u0184\u0185"+
		"\7q\2\2\u0185\u0186\7t\2\2\u0186N\3\2\2\2\u0187\u0188\7p\2\2\u0188\u0189"+
		"\7q\2\2\u0189\u018a\7v\2\2\u018aP\3\2\2\2\u018b\u018c\7t\2\2\u018c\u018d"+
		"\7g\2\2\u018d\u018e\7v\2\2\u018e\u018f\7w\2\2\u018f\u0190\7t\2\2\u0190"+
		"\u0191\7p\2\2\u0191R\3\2\2\2\u0192\u0193\7r\2\2\u0193\u0194\7t\2\2\u0194"+
		"\u0195\7k\2\2\u0195\u0196\7p\2\2\u0196\u0197\7v\2\2\u0197T\3\2\2\2\u0198"+
		"\u0199\7h\2\2\u0199\u019a\7w\2\2\u019a\u019b\7p\2\2\u019b\u019c\7e\2\2"+
		"\u019c\u019d\7v\2\2\u019d\u019e\7k\2\2\u019e\u019f\7q\2\2\u019f\u01a0"+
		"\7p\2\2\u01a0V\3\2\2\2\u01a1\u01a2\7}\2\2\u01a2X\3\2\2\2\u01a3\u01a4\7"+
		"\177\2\2\u01a4Z\3\2\2\2\u01a5\u01a6\7*\2\2\u01a6\\\3\2\2\2\u01a7\u01a8"+
		"\7+\2\2\u01a8^\3\2\2\2\u01a9\u01aa\7k\2\2\u01aa\u01ab\7h\2\2\u01ab`\3"+
		"\2\2\2\u01ac\u01ad\7g\2\2\u01ad\u01ae\7n\2\2\u01ae\u01af\7u\2\2\u01af"+
		"\u01b0\7g\2\2\u01b0b\3\2\2\2\u01b1\u01b2\7x\2\2\u01b2\u01b3\7c\2\2\u01b3"+
		"\u01b4\7t\2\2\u01b4d\3\2\2\2\u01b5\u01b6\7e\2\2\u01b6\u01b7\7q\2\2\u01b7"+
		"\u01b8\7p\2\2\u01b8\u01b9\7u\2\2\u01b9\u01ba\7v\2\2\u01baf\3\2\2\2\u01bb"+
		"\u01bc\7h\2\2\u01bc\u01bd\7q\2\2\u01bd\u01be\7t\2\2\u01beh\3\2\2\2\u01bf"+
		"\u01c0\7y\2\2\u01c0\u01c1\7j\2\2\u01c1\u01c2\7k\2\2\u01c2\u01c3\7n\2\2"+
		"\u01c3\u01c4\7g\2\2\u01c4j\3\2\2\2\u01c5\u01c6\7k\2\2\u01c6\u01c7\7p\2"+
		"\2\u01c7l\3\2\2\2\u01c8\u01cc\t\2\2\2\u01c9\u01cb\t\3\2\2\u01ca\u01c9"+
		"\3\2\2\2\u01cb\u01ce\3\2\2\2\u01cc\u01ca\3\2\2\2\u01cc\u01cd\3\2\2\2\u01cd"+
		"\u01d1\3\2\2\2\u01ce\u01cc\3\2\2\2\u01cf\u01d1\t\3\2\2\u01d0\u01c8\3\2"+
		"\2\2\u01d0\u01cf\3\2\2\2\u01d1n\3\2\2\2\u01d2\u01d6\7$\2\2\u01d3\u01d5"+
		"\n\4\2\2\u01d4\u01d3\3\2\2\2\u01d5\u01d8\3\2\2\2\u01d6\u01d4\3\2\2\2\u01d6"+
		"\u01d7\3\2\2\2\u01d7\u01d9\3\2\2\2\u01d8\u01d6\3\2\2\2\u01d9\u01da\7$"+
		"\2\2\u01dap\3\2\2\2\u01db\u01dc\7v\2\2\u01dc\u01dd\7t\2\2\u01dd\u01de"+
		"\7w\2\2\u01de\u01e5\7g\2\2\u01df\u01e0\7h\2\2\u01e0\u01e1\7c\2\2\u01e1"+
		"\u01e2\7n\2\2\u01e2\u01e3\7u\2\2\u01e3\u01e5\7g\2\2\u01e4\u01db\3\2\2"+
		"\2\u01e4\u01df\3\2\2\2\u01e5r\3\2\2\2\u01e6\u01e7\7d\2\2\u01e7\u01e8\7"+
		"t\2\2\u01e8\u01e9\7g\2\2\u01e9\u01ea\7c\2\2\u01ea\u01eb\7m\2\2\u01ebt"+
		"\3\2\2\2\u01ec\u01ed\7F\2\2\u01ed\u01ee\7g\2\2\u01ee\u01ef\7e\2\2\u01ef"+
		"\u01f0\7m\2\2\u01f0v\3\2\2\2\u01f1\u01f2\7R\2\2\u01f2\u01f3\7n\2\2\u01f3"+
		"\u01f4\7c\2\2\u01f4\u01f5\7{\2\2\u01f5\u01f6\7g\2\2\u01f6\u01f7\7t\2\2"+
		"\u01f7x\3\2\2\2\u01f8\u01fc\t\5\2\2\u01f9\u01fb\t\6\2\2\u01fa\u01f9\3"+
		"\2\2\2\u01fb\u01fe\3\2\2\2\u01fc\u01fa\3\2\2\2\u01fc\u01fd\3\2\2\2\u01fd"+
		"z\3\2\2\2\u01fe\u01fc\3\2\2\2\u01ff\u0200\7?\2\2\u0200\u0201\7?\2\2\u0201"+
		"|\3\2\2\2\u0202\u0203\7>\2\2\u0203~\3\2\2\2\u0204\u0205\7@\2\2\u0205\u0080"+
		"\3\2\2\2\u0206\u0207\7>\2\2\u0207\u0208\7?\2\2\u0208\u0082\3\2\2\2\u0209"+
		"\u020a\7@\2\2\u020a\u020b\7?\2\2\u020b\u0084\3\2\2\2\u020c\u020d\7-\2"+
		"\2\u020d\u020e\7-\2\2\u020e\u0086\3\2\2\2\u020f\u0210\7/\2\2\u0210\u0211"+
		"\7/\2\2\u0211\u0088\3\2\2\2\u0212\u0213\7\61\2\2\u0213\u008a\3\2\2\2\u0214"+
		"\u0215\7,\2\2\u0215\u008c\3\2\2\2\u0216\u0217\7\'\2\2\u0217\u008e\3\2"+
		"\2\2\u0218\u0219\7-\2\2\u0219\u0090\3\2\2\2\u021a\u021b\7/\2\2\u021b\u0092"+
		"\3\2\2\2\u021c\u021d\7=\2\2\u021d\u0094\3\2\2\2\u021e\u0220\t\7\2\2\u021f"+
		"\u021e\3\2\2\2\u0220\u0221\3\2\2\2\u0221\u021f\3\2\2\2\u0221\u0222\3\2"+
		"\2\2\u0222\u0223\3\2\2\2\u0223\u0224\bK\2\2\u0224\u0096\3\2\2\2\t\2\u01cc"+
		"\u01d0\u01d6\u01e4\u01fc\u0221\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}