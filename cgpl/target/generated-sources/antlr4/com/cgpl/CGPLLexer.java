// Generated from com\cgpl\CGPL.g4 by ANTLR 4.7.1
package com.cgpl;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class CGPLLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		AND=39, OR=40, NOT=41, RETURN=42, PRINT=43, FUNCTION=44, LCURLY=45, RCURLY=46, 
		LPAREN=47, RPAREN=48, IF=49, ELSE=50, VAR=51, KONST=52, FOR=53, WHILE=54, 
		IN=55, NUMBER=56, STRING=57, BOOLEAN=58, BREAK=59, DECK=60, PLAYER=61, 
		IDENTIFIER=62, EQUAL=63, LT=64, GT=65, LT_OR_EQUAL=66, GT_OR_EQUAL=67, 
		OP_INC=68, OP_DEC=69, OP_DIV=70, OP_MULT=71, OP_MOD=72, OP_ADD=73, OP_SUB=74, 
		CRLF=75, WS=76;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "T__36", "T__37", "AND", "OR", "NOT", "RETURN", 
		"PRINT", "FUNCTION", "LCURLY", "RCURLY", "LPAREN", "RPAREN", "IF", "ELSE", 
		"VAR", "KONST", "FOR", "WHILE", "IN", "NUMBER", "STRING", "BOOLEAN", "BREAK", 
		"DECK", "PLAYER", "IDENTIFIER", "EQUAL", "LT", "GT", "LT_OR_EQUAL", "GT_OR_EQUAL", 
		"OP_INC", "OP_DEC", "OP_DIV", "OP_MULT", "OP_MOD", "OP_ADD", "OP_SUB", 
		"CRLF", "WS"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'='", "','", "'['", "']'", "'.'", "'add'", "'remove'", "'get'", 
		"'size'", "'shuffle'", "'draw'", "'addCard'", "'removeCard'", "'of'", 
		"'value'", "'suit'", "'color'", "'name'", "'hearts'", "'diamonds'", "'clubs'", 
		"'spades'", "'jack'", "'queen'", "'king'", "'ace'", "'drawCard'", "'discardCard'", 
		"'shuffleHand'", "'getHand'", "'getScore'", "'increaseScore'", "'decreaseScore'", 
		"'getHandSize'", "'switch'", "'case'", "'default'", "':'", "'and'", "'or'", 
		"'not'", "'return'", "'print'", "'function'", "'{'", "'}'", "'('", "')'", 
		"'if'", "'else'", "'var'", "'const'", "'for'", "'while'", "'in'", null, 
		null, null, "'break'", "'Deck'", "'Player'", null, "'=='", "'<'", "'>'", 
		"'<='", "'>='", "'++'", "'--'", "'/'", "'*'", "'%'", "'+'", "'-'", "';'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, "AND", "OR", "NOT", "RETURN", "PRINT", "FUNCTION", "LCURLY", 
		"RCURLY", "LPAREN", "RPAREN", "IF", "ELSE", "VAR", "KONST", "FOR", "WHILE", 
		"IN", "NUMBER", "STRING", "BOOLEAN", "BREAK", "DECK", "PLAYER", "IDENTIFIER", 
		"EQUAL", "LT", "GT", "LT_OR_EQUAL", "GT_OR_EQUAL", "OP_INC", "OP_DEC", 
		"OP_DIV", "OP_MULT", "OP_MOD", "OP_ADD", "OP_SUB", "CRLF", "WS"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public CGPLLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "CGPL.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2N\u0238\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\4K\tK\4L\tL\4M\tM\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3"+
		"\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\n\3\n\3\n"+
		"\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3"+
		"\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16"+
		"\3\16\3\16\3\16\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21"+
		"\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23"+
		"\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\25"+
		"\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\27"+
		"\3\27\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3\31\3\32\3\32"+
		"\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3\34\3\34"+
		"\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35"+
		"\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\37\3\37"+
		"\3\37\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3 \3 \3 \3 \3 \3!\3!\3!\3!"+
		"\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\""+
		"\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3$\3$\3$\3$\3$\3"+
		"$\3$\3%\3%\3%\3%\3%\3&\3&\3&\3&\3&\3&\3&\3&\3\'\3\'\3(\3(\3(\3(\3)\3)"+
		"\3)\3*\3*\3*\3*\3+\3+\3+\3+\3+\3+\3+\3,\3,\3,\3,\3,\3,\3-\3-\3-\3-\3-"+
		"\3-\3-\3-\3-\3.\3.\3/\3/\3\60\3\60\3\61\3\61\3\62\3\62\3\62\3\63\3\63"+
		"\3\63\3\63\3\63\3\64\3\64\3\64\3\64\3\65\3\65\3\65\3\65\3\65\3\65\3\66"+
		"\3\66\3\66\3\66\3\67\3\67\3\67\3\67\3\67\3\67\38\38\38\39\39\79\u01de"+
		"\n9\f9\169\u01e1\139\39\59\u01e4\n9\3:\3:\7:\u01e8\n:\f:\16:\u01eb\13"+
		":\3:\3:\3;\3;\3;\3;\3;\3;\3;\3;\3;\5;\u01f8\n;\3<\3<\3<\3<\3<\3<\3=\3"+
		"=\3=\3=\3=\3>\3>\3>\3>\3>\3>\3>\3?\3?\7?\u020e\n?\f?\16?\u0211\13?\3@"+
		"\3@\3@\3A\3A\3B\3B\3C\3C\3C\3D\3D\3D\3E\3E\3E\3F\3F\3F\3G\3G\3H\3H\3I"+
		"\3I\3J\3J\3K\3K\3L\3L\3M\6M\u0233\nM\rM\16M\u0234\3M\3M\2\2N\3\3\5\4\7"+
		"\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22"+
		"#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C"+
		"#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m8o9q:s;u<w"+
		"=y>{?}@\177A\u0081B\u0083C\u0085D\u0087E\u0089F\u008bG\u008dH\u008fI\u0091"+
		"J\u0093K\u0095L\u0097M\u0099N\3\2\b\3\2\63;\3\2\62;\5\2\f\f\17\17$$\5"+
		"\2C\\aac|\6\2\62;C\\aac|\5\2\13\f\17\17\"\"\2\u023d\2\3\3\2\2\2\2\5\3"+
		"\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2"+
		"\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3"+
		"\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'"+
		"\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63"+
		"\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2"+
		"?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3"+
		"\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2"+
		"\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2"+
		"e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3"+
		"\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2"+
		"\2\2\177\3\2\2\2\2\u0081\3\2\2\2\2\u0083\3\2\2\2\2\u0085\3\2\2\2\2\u0087"+
		"\3\2\2\2\2\u0089\3\2\2\2\2\u008b\3\2\2\2\2\u008d\3\2\2\2\2\u008f\3\2\2"+
		"\2\2\u0091\3\2\2\2\2\u0093\3\2\2\2\2\u0095\3\2\2\2\2\u0097\3\2\2\2\2\u0099"+
		"\3\2\2\2\3\u009b\3\2\2\2\5\u009d\3\2\2\2\7\u009f\3\2\2\2\t\u00a1\3\2\2"+
		"\2\13\u00a3\3\2\2\2\r\u00a5\3\2\2\2\17\u00a9\3\2\2\2\21\u00b0\3\2\2\2"+
		"\23\u00b4\3\2\2\2\25\u00b9\3\2\2\2\27\u00c1\3\2\2\2\31\u00c6\3\2\2\2\33"+
		"\u00ce\3\2\2\2\35\u00d9\3\2\2\2\37\u00dc\3\2\2\2!\u00e2\3\2\2\2#\u00e7"+
		"\3\2\2\2%\u00ed\3\2\2\2\'\u00f2\3\2\2\2)\u00f9\3\2\2\2+\u0102\3\2\2\2"+
		"-\u0108\3\2\2\2/\u010f\3\2\2\2\61\u0114\3\2\2\2\63\u011a\3\2\2\2\65\u011f"+
		"\3\2\2\2\67\u0123\3\2\2\29\u012c\3\2\2\2;\u0138\3\2\2\2=\u0144\3\2\2\2"+
		"?\u014c\3\2\2\2A\u0155\3\2\2\2C\u0163\3\2\2\2E\u0171\3\2\2\2G\u017d\3"+
		"\2\2\2I\u0184\3\2\2\2K\u0189\3\2\2\2M\u0191\3\2\2\2O\u0193\3\2\2\2Q\u0197"+
		"\3\2\2\2S\u019a\3\2\2\2U\u019e\3\2\2\2W\u01a5\3\2\2\2Y\u01ab\3\2\2\2["+
		"\u01b4\3\2\2\2]\u01b6\3\2\2\2_\u01b8\3\2\2\2a\u01ba\3\2\2\2c\u01bc\3\2"+
		"\2\2e\u01bf\3\2\2\2g\u01c4\3\2\2\2i\u01c8\3\2\2\2k\u01ce\3\2\2\2m\u01d2"+
		"\3\2\2\2o\u01d8\3\2\2\2q\u01e3\3\2\2\2s\u01e5\3\2\2\2u\u01f7\3\2\2\2w"+
		"\u01f9\3\2\2\2y\u01ff\3\2\2\2{\u0204\3\2\2\2}\u020b\3\2\2\2\177\u0212"+
		"\3\2\2\2\u0081\u0215\3\2\2\2\u0083\u0217\3\2\2\2\u0085\u0219\3\2\2\2\u0087"+
		"\u021c\3\2\2\2\u0089\u021f\3\2\2\2\u008b\u0222\3\2\2\2\u008d\u0225\3\2"+
		"\2\2\u008f\u0227\3\2\2\2\u0091\u0229\3\2\2\2\u0093\u022b\3\2\2\2\u0095"+
		"\u022d\3\2\2\2\u0097\u022f\3\2\2\2\u0099\u0232\3\2\2\2\u009b\u009c\7?"+
		"\2\2\u009c\4\3\2\2\2\u009d\u009e\7.\2\2\u009e\6\3\2\2\2\u009f\u00a0\7"+
		"]\2\2\u00a0\b\3\2\2\2\u00a1\u00a2\7_\2\2\u00a2\n\3\2\2\2\u00a3\u00a4\7"+
		"\60\2\2\u00a4\f\3\2\2\2\u00a5\u00a6\7c\2\2\u00a6\u00a7\7f\2\2\u00a7\u00a8"+
		"\7f\2\2\u00a8\16\3\2\2\2\u00a9\u00aa\7t\2\2\u00aa\u00ab\7g\2\2\u00ab\u00ac"+
		"\7o\2\2\u00ac\u00ad\7q\2\2\u00ad\u00ae\7x\2\2\u00ae\u00af\7g\2\2\u00af"+
		"\20\3\2\2\2\u00b0\u00b1\7i\2\2\u00b1\u00b2\7g\2\2\u00b2\u00b3\7v\2\2\u00b3"+
		"\22\3\2\2\2\u00b4\u00b5\7u\2\2\u00b5\u00b6\7k\2\2\u00b6\u00b7\7|\2\2\u00b7"+
		"\u00b8\7g\2\2\u00b8\24\3\2\2\2\u00b9\u00ba\7u\2\2\u00ba\u00bb\7j\2\2\u00bb"+
		"\u00bc\7w\2\2\u00bc\u00bd\7h\2\2\u00bd\u00be\7h\2\2\u00be\u00bf\7n\2\2"+
		"\u00bf\u00c0\7g\2\2\u00c0\26\3\2\2\2\u00c1\u00c2\7f\2\2\u00c2\u00c3\7"+
		"t\2\2\u00c3\u00c4\7c\2\2\u00c4\u00c5\7y\2\2\u00c5\30\3\2\2\2\u00c6\u00c7"+
		"\7c\2\2\u00c7\u00c8\7f\2\2\u00c8\u00c9\7f\2\2\u00c9\u00ca\7E\2\2\u00ca"+
		"\u00cb\7c\2\2\u00cb\u00cc\7t\2\2\u00cc\u00cd\7f\2\2\u00cd\32\3\2\2\2\u00ce"+
		"\u00cf\7t\2\2\u00cf\u00d0\7g\2\2\u00d0\u00d1\7o\2\2\u00d1\u00d2\7q\2\2"+
		"\u00d2\u00d3\7x\2\2\u00d3\u00d4\7g\2\2\u00d4\u00d5\7E\2\2\u00d5\u00d6"+
		"\7c\2\2\u00d6\u00d7\7t\2\2\u00d7\u00d8\7f\2\2\u00d8\34\3\2\2\2\u00d9\u00da"+
		"\7q\2\2\u00da\u00db\7h\2\2\u00db\36\3\2\2\2\u00dc\u00dd\7x\2\2\u00dd\u00de"+
		"\7c\2\2\u00de\u00df\7n\2\2\u00df\u00e0\7w\2\2\u00e0\u00e1\7g\2\2\u00e1"+
		" \3\2\2\2\u00e2\u00e3\7u\2\2\u00e3\u00e4\7w\2\2\u00e4\u00e5\7k\2\2\u00e5"+
		"\u00e6\7v\2\2\u00e6\"\3\2\2\2\u00e7\u00e8\7e\2\2\u00e8\u00e9\7q\2\2\u00e9"+
		"\u00ea\7n\2\2\u00ea\u00eb\7q\2\2\u00eb\u00ec\7t\2\2\u00ec$\3\2\2\2\u00ed"+
		"\u00ee\7p\2\2\u00ee\u00ef\7c\2\2\u00ef\u00f0\7o\2\2\u00f0\u00f1\7g\2\2"+
		"\u00f1&\3\2\2\2\u00f2\u00f3\7j\2\2\u00f3\u00f4\7g\2\2\u00f4\u00f5\7c\2"+
		"\2\u00f5\u00f6\7t\2\2\u00f6\u00f7\7v\2\2\u00f7\u00f8\7u\2\2\u00f8(\3\2"+
		"\2\2\u00f9\u00fa\7f\2\2\u00fa\u00fb\7k\2\2\u00fb\u00fc\7c\2\2\u00fc\u00fd"+
		"\7o\2\2\u00fd\u00fe\7q\2\2\u00fe\u00ff\7p\2\2\u00ff\u0100\7f\2\2\u0100"+
		"\u0101\7u\2\2\u0101*\3\2\2\2\u0102\u0103\7e\2\2\u0103\u0104\7n\2\2\u0104"+
		"\u0105\7w\2\2\u0105\u0106\7d\2\2\u0106\u0107\7u\2\2\u0107,\3\2\2\2\u0108"+
		"\u0109\7u\2\2\u0109\u010a\7r\2\2\u010a\u010b\7c\2\2\u010b\u010c\7f\2\2"+
		"\u010c\u010d\7g\2\2\u010d\u010e\7u\2\2\u010e.\3\2\2\2\u010f\u0110\7l\2"+
		"\2\u0110\u0111\7c\2\2\u0111\u0112\7e\2\2\u0112\u0113\7m\2\2\u0113\60\3"+
		"\2\2\2\u0114\u0115\7s\2\2\u0115\u0116\7w\2\2\u0116\u0117\7g\2\2\u0117"+
		"\u0118\7g\2\2\u0118\u0119\7p\2\2\u0119\62\3\2\2\2\u011a\u011b\7m\2\2\u011b"+
		"\u011c\7k\2\2\u011c\u011d\7p\2\2\u011d\u011e\7i\2\2\u011e\64\3\2\2\2\u011f"+
		"\u0120\7c\2\2\u0120\u0121\7e\2\2\u0121\u0122\7g\2\2\u0122\66\3\2\2\2\u0123"+
		"\u0124\7f\2\2\u0124\u0125\7t\2\2\u0125\u0126\7c\2\2\u0126\u0127\7y\2\2"+
		"\u0127\u0128\7E\2\2\u0128\u0129\7c\2\2\u0129\u012a\7t\2\2\u012a\u012b"+
		"\7f\2\2\u012b8\3\2\2\2\u012c\u012d\7f\2\2\u012d\u012e\7k\2\2\u012e\u012f"+
		"\7u\2\2\u012f\u0130\7e\2\2\u0130\u0131\7c\2\2\u0131\u0132\7t\2\2\u0132"+
		"\u0133\7f\2\2\u0133\u0134\7E\2\2\u0134\u0135\7c\2\2\u0135\u0136\7t\2\2"+
		"\u0136\u0137\7f\2\2\u0137:\3\2\2\2\u0138\u0139\7u\2\2\u0139\u013a\7j\2"+
		"\2\u013a\u013b\7w\2\2\u013b\u013c\7h\2\2\u013c\u013d\7h\2\2\u013d\u013e"+
		"\7n\2\2\u013e\u013f\7g\2\2\u013f\u0140\7J\2\2\u0140\u0141\7c\2\2\u0141"+
		"\u0142\7p\2\2\u0142\u0143\7f\2\2\u0143<\3\2\2\2\u0144\u0145\7i\2\2\u0145"+
		"\u0146\7g\2\2\u0146\u0147\7v\2\2\u0147\u0148\7J\2\2\u0148\u0149\7c\2\2"+
		"\u0149\u014a\7p\2\2\u014a\u014b\7f\2\2\u014b>\3\2\2\2\u014c\u014d\7i\2"+
		"\2\u014d\u014e\7g\2\2\u014e\u014f\7v\2\2\u014f\u0150\7U\2\2\u0150\u0151"+
		"\7e\2\2\u0151\u0152\7q\2\2\u0152\u0153\7t\2\2\u0153\u0154\7g\2\2\u0154"+
		"@\3\2\2\2\u0155\u0156\7k\2\2\u0156\u0157\7p\2\2\u0157\u0158\7e\2\2\u0158"+
		"\u0159\7t\2\2\u0159\u015a\7g\2\2\u015a\u015b\7c\2\2\u015b\u015c\7u\2\2"+
		"\u015c\u015d\7g\2\2\u015d\u015e\7U\2\2\u015e\u015f\7e\2\2\u015f\u0160"+
		"\7q\2\2\u0160\u0161\7t\2\2\u0161\u0162\7g\2\2\u0162B\3\2\2\2\u0163\u0164"+
		"\7f\2\2\u0164\u0165\7g\2\2\u0165\u0166\7e\2\2\u0166\u0167\7t\2\2\u0167"+
		"\u0168\7g\2\2\u0168\u0169\7c\2\2\u0169\u016a\7u\2\2\u016a\u016b\7g\2\2"+
		"\u016b\u016c\7U\2\2\u016c\u016d\7e\2\2\u016d\u016e\7q\2\2\u016e\u016f"+
		"\7t\2\2\u016f\u0170\7g\2\2\u0170D\3\2\2\2\u0171\u0172\7i\2\2\u0172\u0173"+
		"\7g\2\2\u0173\u0174\7v\2\2\u0174\u0175\7J\2\2\u0175\u0176\7c\2\2\u0176"+
		"\u0177\7p\2\2\u0177\u0178\7f\2\2\u0178\u0179\7U\2\2\u0179\u017a\7k\2\2"+
		"\u017a\u017b\7|\2\2\u017b\u017c\7g\2\2\u017cF\3\2\2\2\u017d\u017e\7u\2"+
		"\2\u017e\u017f\7y\2\2\u017f\u0180\7k\2\2\u0180\u0181\7v\2\2\u0181\u0182"+
		"\7e\2\2\u0182\u0183\7j\2\2\u0183H\3\2\2\2\u0184\u0185\7e\2\2\u0185\u0186"+
		"\7c\2\2\u0186\u0187\7u\2\2\u0187\u0188\7g\2\2\u0188J\3\2\2\2\u0189\u018a"+
		"\7f\2\2\u018a\u018b\7g\2\2\u018b\u018c\7h\2\2\u018c\u018d\7c\2\2\u018d"+
		"\u018e\7w\2\2\u018e\u018f\7n\2\2\u018f\u0190\7v\2\2\u0190L\3\2\2\2\u0191"+
		"\u0192\7<\2\2\u0192N\3\2\2\2\u0193\u0194\7c\2\2\u0194\u0195\7p\2\2\u0195"+
		"\u0196\7f\2\2\u0196P\3\2\2\2\u0197\u0198\7q\2\2\u0198\u0199\7t\2\2\u0199"+
		"R\3\2\2\2\u019a\u019b\7p\2\2\u019b\u019c\7q\2\2\u019c\u019d\7v\2\2\u019d"+
		"T\3\2\2\2\u019e\u019f\7t\2\2\u019f\u01a0\7g\2\2\u01a0\u01a1\7v\2\2\u01a1"+
		"\u01a2\7w\2\2\u01a2\u01a3\7t\2\2\u01a3\u01a4\7p\2\2\u01a4V\3\2\2\2\u01a5"+
		"\u01a6\7r\2\2\u01a6\u01a7\7t\2\2\u01a7\u01a8\7k\2\2\u01a8\u01a9\7p\2\2"+
		"\u01a9\u01aa\7v\2\2\u01aaX\3\2\2\2\u01ab\u01ac\7h\2\2\u01ac\u01ad\7w\2"+
		"\2\u01ad\u01ae\7p\2\2\u01ae\u01af\7e\2\2\u01af\u01b0\7v\2\2\u01b0\u01b1"+
		"\7k\2\2\u01b1\u01b2\7q\2\2\u01b2\u01b3\7p\2\2\u01b3Z\3\2\2\2\u01b4\u01b5"+
		"\7}\2\2\u01b5\\\3\2\2\2\u01b6\u01b7\7\177\2\2\u01b7^\3\2\2\2\u01b8\u01b9"+
		"\7*\2\2\u01b9`\3\2\2\2\u01ba\u01bb\7+\2\2\u01bbb\3\2\2\2\u01bc\u01bd\7"+
		"k\2\2\u01bd\u01be\7h\2\2\u01bed\3\2\2\2\u01bf\u01c0\7g\2\2\u01c0\u01c1"+
		"\7n\2\2\u01c1\u01c2\7u\2\2\u01c2\u01c3\7g\2\2\u01c3f\3\2\2\2\u01c4\u01c5"+
		"\7x\2\2\u01c5\u01c6\7c\2\2\u01c6\u01c7\7t\2\2\u01c7h\3\2\2\2\u01c8\u01c9"+
		"\7e\2\2\u01c9\u01ca\7q\2\2\u01ca\u01cb\7p\2\2\u01cb\u01cc\7u\2\2\u01cc"+
		"\u01cd\7v\2\2\u01cdj\3\2\2\2\u01ce\u01cf\7h\2\2\u01cf\u01d0\7q\2\2\u01d0"+
		"\u01d1\7t\2\2\u01d1l\3\2\2\2\u01d2\u01d3\7y\2\2\u01d3\u01d4\7j\2\2\u01d4"+
		"\u01d5\7k\2\2\u01d5\u01d6\7n\2\2\u01d6\u01d7\7g\2\2\u01d7n\3\2\2\2\u01d8"+
		"\u01d9\7k\2\2\u01d9\u01da\7p\2\2\u01dap\3\2\2\2\u01db\u01df\t\2\2\2\u01dc"+
		"\u01de\t\3\2\2\u01dd\u01dc\3\2\2\2\u01de\u01e1\3\2\2\2\u01df\u01dd\3\2"+
		"\2\2\u01df\u01e0\3\2\2\2\u01e0\u01e4\3\2\2\2\u01e1\u01df\3\2\2\2\u01e2"+
		"\u01e4\t\3\2\2\u01e3\u01db\3\2\2\2\u01e3\u01e2\3\2\2\2\u01e4r\3\2\2\2"+
		"\u01e5\u01e9\7$\2\2\u01e6\u01e8\n\4\2\2\u01e7\u01e6\3\2\2\2\u01e8\u01eb"+
		"\3\2\2\2\u01e9\u01e7\3\2\2\2\u01e9\u01ea\3\2\2\2\u01ea\u01ec\3\2\2\2\u01eb"+
		"\u01e9\3\2\2\2\u01ec\u01ed\7$\2\2\u01edt\3\2\2\2\u01ee\u01ef\7v\2\2\u01ef"+
		"\u01f0\7t\2\2\u01f0\u01f1\7w\2\2\u01f1\u01f8\7g\2\2\u01f2\u01f3\7h\2\2"+
		"\u01f3\u01f4\7c\2\2\u01f4\u01f5\7n\2\2\u01f5\u01f6\7u\2\2\u01f6\u01f8"+
		"\7g\2\2\u01f7\u01ee\3\2\2\2\u01f7\u01f2\3\2\2\2\u01f8v\3\2\2\2\u01f9\u01fa"+
		"\7d\2\2\u01fa\u01fb\7t\2\2\u01fb\u01fc\7g\2\2\u01fc\u01fd\7c\2\2\u01fd"+
		"\u01fe\7m\2\2\u01fex\3\2\2\2\u01ff\u0200\7F\2\2\u0200\u0201\7g\2\2\u0201"+
		"\u0202\7e\2\2\u0202\u0203\7m\2\2\u0203z\3\2\2\2\u0204\u0205\7R\2\2\u0205"+
		"\u0206\7n\2\2\u0206\u0207\7c\2\2\u0207\u0208\7{\2\2\u0208\u0209\7g\2\2"+
		"\u0209\u020a\7t\2\2\u020a|\3\2\2\2\u020b\u020f\t\5\2\2\u020c\u020e\t\6"+
		"\2\2\u020d\u020c\3\2\2\2\u020e\u0211\3\2\2\2\u020f\u020d\3\2\2\2\u020f"+
		"\u0210\3\2\2\2\u0210~\3\2\2\2\u0211\u020f\3\2\2\2\u0212\u0213\7?\2\2\u0213"+
		"\u0214\7?\2\2\u0214\u0080\3\2\2\2\u0215\u0216\7>\2\2\u0216\u0082\3\2\2"+
		"\2\u0217\u0218\7@\2\2\u0218\u0084\3\2\2\2\u0219\u021a\7>\2\2\u021a\u021b"+
		"\7?\2\2\u021b\u0086\3\2\2\2\u021c\u021d\7@\2\2\u021d\u021e\7?\2\2\u021e"+
		"\u0088\3\2\2\2\u021f\u0220\7-\2\2\u0220\u0221\7-\2\2\u0221\u008a\3\2\2"+
		"\2\u0222\u0223\7/\2\2\u0223\u0224\7/\2\2\u0224\u008c\3\2\2\2\u0225\u0226"+
		"\7\61\2\2\u0226\u008e\3\2\2\2\u0227\u0228\7,\2\2\u0228\u0090\3\2\2\2\u0229"+
		"\u022a\7\'\2\2\u022a\u0092\3\2\2\2\u022b\u022c\7-\2\2\u022c\u0094\3\2"+
		"\2\2\u022d\u022e\7/\2\2\u022e\u0096\3\2\2\2\u022f\u0230\7=\2\2\u0230\u0098"+
		"\3\2\2\2\u0231\u0233\t\7\2\2\u0232\u0231\3\2\2\2\u0233\u0234\3\2\2\2\u0234"+
		"\u0232\3\2\2\2\u0234\u0235\3\2\2\2\u0235\u0236\3\2\2\2\u0236\u0237\bM"+
		"\2\2\u0237\u009a\3\2\2\2\t\2\u01df\u01e3\u01e9\u01f7\u020f\u0234\3\b\2"+
		"\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}