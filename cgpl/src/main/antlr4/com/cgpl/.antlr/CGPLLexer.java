// Generated from c://Users//theis//Programmering//CGPL//cgpl//src//main//antlr4//com//cgpl//CGPL.g4 by ANTLR 4.13.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class CGPLLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, AND=5, OR=6, NOT=7, RETURN=8, FUNCTION=9, 
		LCURLY=10, RCURLY=11, LPAREN=12, RPAREN=13, IF=14, ELSE=15, VAR=16, FOR=17, 
		IN=18, NUMBER=19, STRING=20, BOOLEAN=21, IDENTIFIER=22, EQUAL=23, LT=24, 
		GT=25, LT_OR_EQUAL=26, GT_OR_EQUAL=27, OP_INC=28, OP_DEC=29, OP_DIV=30, 
		OP_MULT=31, OP_MOD=32, OP_ADD=33, OP_SUB=34, CRLF=35, WS=36;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "AND", "OR", "NOT", "RETURN", "FUNCTION", 
			"LCURLY", "RCURLY", "LPAREN", "RPAREN", "IF", "ELSE", "VAR", "FOR", "IN", 
			"NUMBER", "STRING", "BOOLEAN", "IDENTIFIER", "EQUAL", "LT", "GT", "LT_OR_EQUAL", 
			"GT_OR_EQUAL", "OP_INC", "OP_DEC", "OP_DIV", "OP_MULT", "OP_MOD", "OP_ADD", 
			"OP_SUB", "CRLF", "WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'='", "','", "'['", "']'", "'and'", "'or'", "'not'", "'return'", 
			"'function'", "'{'", "'}'", "'('", "')'", "'if'", "'else'", "'var'", 
			"'for'", "'in'", null, null, null, null, "'=='", "'<'", "'>'", "'<='", 
			"'>='", "'++'", "'--'", "'/'", "'*'", "'%'", "'+'", "'-'", "';'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, "AND", "OR", "NOT", "RETURN", "FUNCTION", 
			"LCURLY", "RCURLY", "LPAREN", "RPAREN", "IF", "ELSE", "VAR", "FOR", "IN", 
			"NUMBER", "STRING", "BOOLEAN", "IDENTIFIER", "EQUAL", "LT", "GT", "LT_OR_EQUAL", 
			"GT_OR_EQUAL", "OP_INC", "OP_DEC", "OP_DIV", "OP_MULT", "OP_MOD", "OP_ADD", 
			"OP_SUB", "CRLF", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public CGPLLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "CGPL.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000$\u00d2\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!\u0007"+
		"!\u0002\"\u0007\"\u0002#\u0007#\u0001\u0000\u0001\u0000\u0001\u0001\u0001"+
		"\u0001\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003\u0001\u0004\u0001"+
		"\u0004\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0005\u0001"+
		"\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0007\u0001\u0007\u0001"+
		"\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\b\u0001\b"+
		"\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001\t\u0001"+
		"\t\u0001\n\u0001\n\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0001\r\u0001"+
		"\r\u0001\r\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e"+
		"\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u0010\u0001\u0010"+
		"\u0001\u0010\u0001\u0010\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0012"+
		"\u0001\u0012\u0005\u0012\u008a\b\u0012\n\u0012\f\u0012\u008d\t\u0012\u0001"+
		"\u0012\u0003\u0012\u0090\b\u0012\u0001\u0013\u0001\u0013\u0005\u0013\u0094"+
		"\b\u0013\n\u0013\f\u0013\u0097\t\u0013\u0001\u0013\u0001\u0013\u0001\u0014"+
		"\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0014"+
		"\u0001\u0014\u0001\u0014\u0003\u0014\u00a4\b\u0014\u0001\u0015\u0001\u0015"+
		"\u0005\u0015\u00a8\b\u0015\n\u0015\f\u0015\u00ab\t\u0015\u0001\u0016\u0001"+
		"\u0016\u0001\u0016\u0001\u0017\u0001\u0017\u0001\u0018\u0001\u0018\u0001"+
		"\u0019\u0001\u0019\u0001\u0019\u0001\u001a\u0001\u001a\u0001\u001a\u0001"+
		"\u001b\u0001\u001b\u0001\u001b\u0001\u001c\u0001\u001c\u0001\u001c\u0001"+
		"\u001d\u0001\u001d\u0001\u001e\u0001\u001e\u0001\u001f\u0001\u001f\u0001"+
		" \u0001 \u0001!\u0001!\u0001\"\u0001\"\u0001#\u0004#\u00cd\b#\u000b#\f"+
		"#\u00ce\u0001#\u0001#\u0000\u0000$\u0001\u0001\u0003\u0002\u0005\u0003"+
		"\u0007\u0004\t\u0005\u000b\u0006\r\u0007\u000f\b\u0011\t\u0013\n\u0015"+
		"\u000b\u0017\f\u0019\r\u001b\u000e\u001d\u000f\u001f\u0010!\u0011#\u0012"+
		"%\u0013\'\u0014)\u0015+\u0016-\u0017/\u00181\u00193\u001a5\u001b7\u001c"+
		"9\u001d;\u001e=\u001f? A!C\"E#G$\u0001\u0000\u0006\u0001\u000019\u0001"+
		"\u000009\u0003\u0000\n\n\r\r\"\"\u0003\u0000AZ__az\u0004\u000009AZ__a"+
		"z\u0003\u0000\t\n\r\r  \u00d7\u0000\u0001\u0001\u0000\u0000\u0000\u0000"+
		"\u0003\u0001\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000"+
		"\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b"+
		"\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001"+
		"\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0013\u0001"+
		"\u0000\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0017\u0001"+
		"\u0000\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u001b\u0001"+
		"\u0000\u0000\u0000\u0000\u001d\u0001\u0000\u0000\u0000\u0000\u001f\u0001"+
		"\u0000\u0000\u0000\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000\u0000"+
		"\u0000\u0000%\u0001\u0000\u0000\u0000\u0000\'\u0001\u0000\u0000\u0000"+
		"\u0000)\u0001\u0000\u0000\u0000\u0000+\u0001\u0000\u0000\u0000\u0000-"+
		"\u0001\u0000\u0000\u0000\u0000/\u0001\u0000\u0000\u0000\u00001\u0001\u0000"+
		"\u0000\u0000\u00003\u0001\u0000\u0000\u0000\u00005\u0001\u0000\u0000\u0000"+
		"\u00007\u0001\u0000\u0000\u0000\u00009\u0001\u0000\u0000\u0000\u0000;"+
		"\u0001\u0000\u0000\u0000\u0000=\u0001\u0000\u0000\u0000\u0000?\u0001\u0000"+
		"\u0000\u0000\u0000A\u0001\u0000\u0000\u0000\u0000C\u0001\u0000\u0000\u0000"+
		"\u0000E\u0001\u0000\u0000\u0000\u0000G\u0001\u0000\u0000\u0000\u0001I"+
		"\u0001\u0000\u0000\u0000\u0003K\u0001\u0000\u0000\u0000\u0005M\u0001\u0000"+
		"\u0000\u0000\u0007O\u0001\u0000\u0000\u0000\tQ\u0001\u0000\u0000\u0000"+
		"\u000bU\u0001\u0000\u0000\u0000\rX\u0001\u0000\u0000\u0000\u000f\\\u0001"+
		"\u0000\u0000\u0000\u0011c\u0001\u0000\u0000\u0000\u0013l\u0001\u0000\u0000"+
		"\u0000\u0015n\u0001\u0000\u0000\u0000\u0017p\u0001\u0000\u0000\u0000\u0019"+
		"r\u0001\u0000\u0000\u0000\u001bt\u0001\u0000\u0000\u0000\u001dw\u0001"+
		"\u0000\u0000\u0000\u001f|\u0001\u0000\u0000\u0000!\u0080\u0001\u0000\u0000"+
		"\u0000#\u0084\u0001\u0000\u0000\u0000%\u008f\u0001\u0000\u0000\u0000\'"+
		"\u0091\u0001\u0000\u0000\u0000)\u00a3\u0001\u0000\u0000\u0000+\u00a5\u0001"+
		"\u0000\u0000\u0000-\u00ac\u0001\u0000\u0000\u0000/\u00af\u0001\u0000\u0000"+
		"\u00001\u00b1\u0001\u0000\u0000\u00003\u00b3\u0001\u0000\u0000\u00005"+
		"\u00b6\u0001\u0000\u0000\u00007\u00b9\u0001\u0000\u0000\u00009\u00bc\u0001"+
		"\u0000\u0000\u0000;\u00bf\u0001\u0000\u0000\u0000=\u00c1\u0001\u0000\u0000"+
		"\u0000?\u00c3\u0001\u0000\u0000\u0000A\u00c5\u0001\u0000\u0000\u0000C"+
		"\u00c7\u0001\u0000\u0000\u0000E\u00c9\u0001\u0000\u0000\u0000G\u00cc\u0001"+
		"\u0000\u0000\u0000IJ\u0005=\u0000\u0000J\u0002\u0001\u0000\u0000\u0000"+
		"KL\u0005,\u0000\u0000L\u0004\u0001\u0000\u0000\u0000MN\u0005[\u0000\u0000"+
		"N\u0006\u0001\u0000\u0000\u0000OP\u0005]\u0000\u0000P\b\u0001\u0000\u0000"+
		"\u0000QR\u0005a\u0000\u0000RS\u0005n\u0000\u0000ST\u0005d\u0000\u0000"+
		"T\n\u0001\u0000\u0000\u0000UV\u0005o\u0000\u0000VW\u0005r\u0000\u0000"+
		"W\f\u0001\u0000\u0000\u0000XY\u0005n\u0000\u0000YZ\u0005o\u0000\u0000"+
		"Z[\u0005t\u0000\u0000[\u000e\u0001\u0000\u0000\u0000\\]\u0005r\u0000\u0000"+
		"]^\u0005e\u0000\u0000^_\u0005t\u0000\u0000_`\u0005u\u0000\u0000`a\u0005"+
		"r\u0000\u0000ab\u0005n\u0000\u0000b\u0010\u0001\u0000\u0000\u0000cd\u0005"+
		"f\u0000\u0000de\u0005u\u0000\u0000ef\u0005n\u0000\u0000fg\u0005c\u0000"+
		"\u0000gh\u0005t\u0000\u0000hi\u0005i\u0000\u0000ij\u0005o\u0000\u0000"+
		"jk\u0005n\u0000\u0000k\u0012\u0001\u0000\u0000\u0000lm\u0005{\u0000\u0000"+
		"m\u0014\u0001\u0000\u0000\u0000no\u0005}\u0000\u0000o\u0016\u0001\u0000"+
		"\u0000\u0000pq\u0005(\u0000\u0000q\u0018\u0001\u0000\u0000\u0000rs\u0005"+
		")\u0000\u0000s\u001a\u0001\u0000\u0000\u0000tu\u0005i\u0000\u0000uv\u0005"+
		"f\u0000\u0000v\u001c\u0001\u0000\u0000\u0000wx\u0005e\u0000\u0000xy\u0005"+
		"l\u0000\u0000yz\u0005s\u0000\u0000z{\u0005e\u0000\u0000{\u001e\u0001\u0000"+
		"\u0000\u0000|}\u0005v\u0000\u0000}~\u0005a\u0000\u0000~\u007f\u0005r\u0000"+
		"\u0000\u007f \u0001\u0000\u0000\u0000\u0080\u0081\u0005f\u0000\u0000\u0081"+
		"\u0082\u0005o\u0000\u0000\u0082\u0083\u0005r\u0000\u0000\u0083\"\u0001"+
		"\u0000\u0000\u0000\u0084\u0085\u0005i\u0000\u0000\u0085\u0086\u0005n\u0000"+
		"\u0000\u0086$\u0001\u0000\u0000\u0000\u0087\u008b\u0007\u0000\u0000\u0000"+
		"\u0088\u008a\u0007\u0001\u0000\u0000\u0089\u0088\u0001\u0000\u0000\u0000"+
		"\u008a\u008d\u0001\u0000\u0000\u0000\u008b\u0089\u0001\u0000\u0000\u0000"+
		"\u008b\u008c\u0001\u0000\u0000\u0000\u008c\u0090\u0001\u0000\u0000\u0000"+
		"\u008d\u008b\u0001\u0000\u0000\u0000\u008e\u0090\u0007\u0001\u0000\u0000"+
		"\u008f\u0087\u0001\u0000\u0000\u0000\u008f\u008e\u0001\u0000\u0000\u0000"+
		"\u0090&\u0001\u0000\u0000\u0000\u0091\u0095\u0005\"\u0000\u0000\u0092"+
		"\u0094\b\u0002\u0000\u0000\u0093\u0092\u0001\u0000\u0000\u0000\u0094\u0097"+
		"\u0001\u0000\u0000\u0000\u0095\u0093\u0001\u0000\u0000\u0000\u0095\u0096"+
		"\u0001\u0000\u0000\u0000\u0096\u0098\u0001\u0000\u0000\u0000\u0097\u0095"+
		"\u0001\u0000\u0000\u0000\u0098\u0099\u0005\"\u0000\u0000\u0099(\u0001"+
		"\u0000\u0000\u0000\u009a\u009b\u0005t\u0000\u0000\u009b\u009c\u0005r\u0000"+
		"\u0000\u009c\u009d\u0005u\u0000\u0000\u009d\u00a4\u0005e\u0000\u0000\u009e"+
		"\u009f\u0005f\u0000\u0000\u009f\u00a0\u0005a\u0000\u0000\u00a0\u00a1\u0005"+
		"l\u0000\u0000\u00a1\u00a2\u0005s\u0000\u0000\u00a2\u00a4\u0005e\u0000"+
		"\u0000\u00a3\u009a\u0001\u0000\u0000\u0000\u00a3\u009e\u0001\u0000\u0000"+
		"\u0000\u00a4*\u0001\u0000\u0000\u0000\u00a5\u00a9\u0007\u0003\u0000\u0000"+
		"\u00a6\u00a8\u0007\u0004\u0000\u0000\u00a7\u00a6\u0001\u0000\u0000\u0000"+
		"\u00a8\u00ab\u0001\u0000\u0000\u0000\u00a9\u00a7\u0001\u0000\u0000\u0000"+
		"\u00a9\u00aa\u0001\u0000\u0000\u0000\u00aa,\u0001\u0000\u0000\u0000\u00ab"+
		"\u00a9\u0001\u0000\u0000\u0000\u00ac\u00ad\u0005=\u0000\u0000\u00ad\u00ae"+
		"\u0005=\u0000\u0000\u00ae.\u0001\u0000\u0000\u0000\u00af\u00b0\u0005<"+
		"\u0000\u0000\u00b00\u0001\u0000\u0000\u0000\u00b1\u00b2\u0005>\u0000\u0000"+
		"\u00b22\u0001\u0000\u0000\u0000\u00b3\u00b4\u0005<\u0000\u0000\u00b4\u00b5"+
		"\u0005=\u0000\u0000\u00b54\u0001\u0000\u0000\u0000\u00b6\u00b7\u0005>"+
		"\u0000\u0000\u00b7\u00b8\u0005=\u0000\u0000\u00b86\u0001\u0000\u0000\u0000"+
		"\u00b9\u00ba\u0005+\u0000\u0000\u00ba\u00bb\u0005+\u0000\u0000\u00bb8"+
		"\u0001\u0000\u0000\u0000\u00bc\u00bd\u0005-\u0000\u0000\u00bd\u00be\u0005"+
		"-\u0000\u0000\u00be:\u0001\u0000\u0000\u0000\u00bf\u00c0\u0005/\u0000"+
		"\u0000\u00c0<\u0001\u0000\u0000\u0000\u00c1\u00c2\u0005*\u0000\u0000\u00c2"+
		">\u0001\u0000\u0000\u0000\u00c3\u00c4\u0005%\u0000\u0000\u00c4@\u0001"+
		"\u0000\u0000\u0000\u00c5\u00c6\u0005+\u0000\u0000\u00c6B\u0001\u0000\u0000"+
		"\u0000\u00c7\u00c8\u0005-\u0000\u0000\u00c8D\u0001\u0000\u0000\u0000\u00c9"+
		"\u00ca\u0005;\u0000\u0000\u00caF\u0001\u0000\u0000\u0000\u00cb\u00cd\u0007"+
		"\u0005\u0000\u0000\u00cc\u00cb\u0001\u0000\u0000\u0000\u00cd\u00ce\u0001"+
		"\u0000\u0000\u0000\u00ce\u00cc\u0001\u0000\u0000\u0000\u00ce\u00cf\u0001"+
		"\u0000\u0000\u0000\u00cf\u00d0\u0001\u0000\u0000\u0000\u00d0\u00d1\u0006"+
		"#\u0000\u0000\u00d1H\u0001\u0000\u0000\u0000\u0007\u0000\u008b\u008f\u0095"+
		"\u00a3\u00a9\u00ce\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}